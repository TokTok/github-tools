load("@io_tweag_rules_haskell//haskell:haskell.bzl", "haskell_library", "haskell_test")
load("//tools/project:build_defs.bzl", "project")

project()

haskell_library(
    name = "hs-github-tools",
    srcs = glob(["src/**/*.*hs"]),
    compiler_flags = [
        "-j4",
        "-Wall",
        "-Werror",
        "-Wno-unused-imports",
    ],
    src_strip_prefix = "src",
    version = "0.1.1",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:containers",
        "//third_party/haskell:text",
        "//third_party/haskell:time",
        "@haskell_QuickCheck//:QuickCheck",
        "@haskell_aeson//:aeson",
        "@haskell_cryptohash//:cryptohash",
        "@haskell_exceptions//:exceptions",
        "@haskell_github//:github",
        "@haskell_html//:html",
        "@haskell_http_client//:http-client",
        "@haskell_http_client_tls//:http-client-tls",
        "@haskell_monad_parallel//:monad-parallel",
        "@haskell_quickcheck_text//:quickcheck-text",
        "@haskell_tabular//:tabular",
        "@haskell_unordered_containers//:unordered-containers",
        "@haskell_uuid//:uuid",
        "@haskell_vector//:vector",
    ],
)

haskell_test(
    name = "test",
    timeout = "long",
    srcs = glob(["test/**/*.*hs"]),
    args = [
        "-j4",
        "+RTS",
        "-N4",
    ],
    compiler_flags = [
        "-threaded",
        "-rtsopts",
        "-Wall",
        "-Werror",
        "-Wno-unused-imports",
    ],
    src_strip_prefix = "test",
    visibility = ["//visibility:public"],
    deps = [
        ":hs-github-tools",
        "//third_party/haskell:base",
        "@haskell_QuickCheck//:QuickCheck",
        "@haskell_aeson//:aeson",
        "@haskell_hspec//:hspec",
    ],
)
